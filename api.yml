swagger: '2.0'
info:
  title: Shopping cart API
  version: "0.1"
  description: Simple example API
consumes:
  - application/json
produces:
  - application/json
basePath: "/api"
securityDefinitions:
  jwt:
    type: apiKey
    name: Authorization
    in: header
    x-authentication-scheme: Bearer
    x-bearerInfoFunc: app.decode_token
paths:
  /add_product/{product_id}:
    post:
      tags: [ Product ]
      operationId: app.add_product
      parameters:
        - $ref: '#/parameters/product_id'
        - $ref: '#/parameters/user_id'
      responses:
        200:
          description: Product added
        405:
          description: Couldnt add product

  /remove_product/{product_id}:
    post:
      tags: [ Product ]
      operationId: app.remove_product
      parameters:
        - $ref: '#/parameters/product_id'
        - $ref: '#/parameters/user_id'
      responses:
        200:
          description: Product remove
        405:
          description: Couldnt remove product

  /list_all_products/{user_id}:
    get:
      security:
        - jwt: [ 'secret' ]
      tags: [ Product ]
      operationId: app.list_all_products
      parameters:
        - $ref: '#/parameters/user_id'
      responses:
        200:
          description: Listed all products
        404:
          description: Couldnt list all products

  /change_quantity/{product_id}:
    post:
      tags: [ Product ]
      operationId: app.change_quantity
      parameters:
        - $ref: '#/parameters/product_id'
        - $ref: '#/parameters/user_id'
        - $ref: '#/parameters/quantity'
      responses:
        200:
          description: Quantity changed
        404:
          description: Couldnt change quantity

  /buy_products/{cart_id}:
    post:
      tags: [ Product ]
      operationId: app.buy_products
      parameters:
        - $ref: '#/parameters/cart_id'
      responses:
        200:
          description: Price sent
        404:
          description: Couldnt send price

  /reserve_product/{user_id}:
    post:
      tags: [ Product ]
      operationId: app.reserve_product
      parameters:
        - $ref: '#/parameters/user_id'
      responses:
        200:
          description: Products sent
        404:
          description: Couldnt send products

  /create_invoice/{user_id}:
    post:
      tags: [ Product ]
      operationId: app.create_invoice
      parameters:
        - $ref: '#/parameters/user_id'
        - $ref: '#/parameters/transaction_id'
      responses:
        200:
          description: Products sent
        404:
          description: Couldnt send products

parameters:
  user_id:
    name: user_id
    description: User ID
    in: path
    type: integer
    required: true

  product_id:
    name: product_id
    description: Product ID
    in: path
    type: integer
    required: true

  quantity:
    name: quantity
    description: Product quantity
    in: path
    type: integer
    required: true

  cart_id:
    name: cart_id
    description: Cart ID
    in: path
    type: integer
    required: true

  transaction_id:
    name: transaction_id
    description: Transaction ID
    in: path
    type: integer
    required: true

